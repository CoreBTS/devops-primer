# This workflow will build and push a Java application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-java?tabs=javase&pivots=platform-linux
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the JAVA_VERSION environment variable below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy JAR app to Azure Web App

env:
  AZURE_WEBAPP_NAME: app-simple-app-dev-01    # set this to the name of your Azure Web App
  JAVA_VERSION: '17'                          # set this to the Java version to use
  DISTRIBUTION: temurin                       # set this to the Java distribution
  AZURE_TENANT_ID: 653fcdc1-a3dc-4588-96c4-ef684fc1232b

on:
  push:
    branches: [ "feature_rb" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java version
        uses: actions/setup-java@v3.0.0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRIBUTION }}
          cache: 'maven'
          
      - name: Make working directory
        run: mkdir /home/runner/work/devops-primer/devops-primer/target/
        
      - name: Change to working directory
        run: cd /home/runner/work/devops-primer/devops-primer/target/

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: java-app-rb
          path: /home/runner/work/devops-primer/devops-primer/target/demo-api-0.0.2-SNAPSHOT.jar
       
      - name: Run Unit Tests
        run: mvn -B test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: java-app-rb
          path: /home/runner/work/devops-primer/devops-primer/target/

      - name: Deploy to Azure Web App - Login
        id: deploy-to-webapp-login
        uses: azure/login@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ env.AZURE_TENANT_ID }}"}'
          
      - name: Deploy to Azure Web App - Deploy
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: /home/runner/work/devops-primer/devops-primer/target/demo-api-0.0.2-SNAPSHOT.jar
          
      - name: Unit Test Health Check
        id: curl
        run: |
          echo "Running curl on endpoint https://app-simple-app-dev-01.azurewebsites.net/manage/health"
          curl https://app-simple-app-dev-01.azurewebsites.net/manage/health > test.txt
          cat test.txt
          echo ::set-output name=curlcheck::$(cat test.txt)
          echo ${{ steps.curl.outputs.curlcheck }}
   
   
          
